apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kind-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Pod
metadata:
  name: kind-cluster
  labels:
    app: kind-cluster
spec:
  initContainers:
  - name: create-cluster
    image: localhost/kind
    imagePullPolicy: IfNotPresent
    securityContext:
      privileged: true
      readOnlyRootFilesystem: true
    command:
    - /usr/local/bin/kind-create-cluster
    env:
    - name: TMPDIR
      value: /tmp
    - name: KIND_CLUSTER_CONFIG
      value: /etc/kind-cluster-rootless.yaml
    volumeMounts:
    - mountPath: /var/lib/containers
      name: var-lib-containers
    - mountPath: /etc/containers/networks/kind.json
      name: podman-config
      subPath: kind-network.json
      readOnly: true
    - mountPath: /run
      name: init-c-run-tmp
    - mountPath: /tmp
      name: init-c-run-tmp
  containers:
  - name: run-cluster
    image: localhost/kind
    imagePullPolicy: IfNotPresent
    securityContext:
      privileged: true
      readOnlyRootFilesystem: true
    command:
    - bash
    - -c
    - 'podman start --all && sleep infinity'
    env:
    - name: TMPDIR
      value: /tmp
    volumeMounts:
    - mountPath: /var/lib/containers
      name: var-lib-containers
    - mountPath: /etc/containers/networks/kind.json
      name: podman-config
      subPath: kind-network.json
      readOnly: true
    - mountPath: /run
      name: podman-run-tmp
    - mountPath: /tmp
      name: podman-run-tmp
  - name: api-proxy
    image: docker.io/library/nginx:stable
    imagePullPolicy: IfNotPresent
    securityContext:
      readOnlyRootFilesystem: true
    command:
    - /usr/sbin/nginx
    volumeMounts:
    - mountPath: /etc/nginx/nginx.conf
      name: nginx-config
      subPath: nginx.conf
      readOnly: true
    - mountPath: /run
      name: nginx-run-cache
    - mountPath: /var/cache/nginx
      name: nginx-run-cache
  volumes:
  - name: var-lib-containers
    persistentVolumeClaim:
      claimName: kind-pvc
  - name: podman-config
    configMap:
      name: podman-config
  - name: nginx-config
    configMap:
      name: nginx-config
  - name: init-c-run-tmp
    emptyDir: {}
  - name: podman-run-tmp
    emptyDir: {}
  - name: nginx-run-cache
    emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: podman-config
data:
  kind-network.json: |
    {
     "name": "kind",
     "id": "7beee7286e2c3a88e9dd722262253e10087cfc322dc1a9302c432479809caa88",
     "driver": "bridge",
     "network_interface": "podman1",
     "created": "2023-12-06T07:53:45.286829744Z",
     "subnets": [
          {
               "subnet": "10.89.0.0/24",
               "gateway": "10.89.0.1"
          }
     ],
     "ipv6_enabled": false,
     "internal": false,
     "dns_enabled": true,
     "ipam_options": {
          "driver": "host-local"
     }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    user nginx;
    error_log /var/log/nginx/error.log notice;

    pid /run/nginx.pid;
    worker_processes  1;
    daemon off;

    events {
      worker_connections 1024;
    }

    include /usr/share/nginx/modules/*.conf;

    http {
      server {
        listen 6080;

        location / {
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_pass https://127.0.0.1:6443/;
          proxy_set_header Host $http_host;
          proxy_set_header X-Forwarded-For $remote_addr;
        }
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: kind-cluster
spec:
  selector:
    app: kind-cluster
  ports:
  - protocol: TCP
    port: 6080
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: strip-prefix-kind-api
  namespace: default
spec:
  stripPrefix:
    prefixes:
      - /kind-api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kind-cluster-api
  namespace: default
  annotations:
    # kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.middlewares: default-strip-prefix-kind-api@kubernetescrd
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  ingressClassName: traefik
  rules:
  - http:
      paths:
      - path: /kind-api
        pathType: Prefix
        backend:
          service:
            name: kind-cluster
            port:
              number: 6080
